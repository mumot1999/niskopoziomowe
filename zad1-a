// ConsoleApplication3.cpp : Ten plik zawiera funkcję „main”. W nim rozpoczyna się i kończy wykonywanie programu.
//

#include "pch.h"
#include <iostream>

struct FileData {
	int count;
	unsigned *data;
};

int zerosBin(unsigned n) {
	int num_zeroes = 0;
	int flagFoundOne = 0;
	for (int i = sizeof(unsigned)*8; i; i--)
	{
		int mask = (1 << i-1);
		int bit = n & mask;
		if (bit)
			flagFoundOne = 1;
		if (!bit && flagFoundOne)
			num_zeroes++;
	}
	return num_zeroes;
}

int onesBin(unsigned n) {
	int ones = 0;
	while (n != 0) {
		ones += (n & 1);
		n >>= 1;
	}
	return ones;
}

bool lastFirstBit(unsigned n) {
	return (n & (1 << (sizeof(unsigned) * 8 - 1)) && n & 1);
}



FileData readFromFile(const char fileName[]) {
	FileData fileData;
	FILE *pFile;
	fopen_s(&pFile, fileName, "r"); // read mode
	int _count;
	fscanf_s(pFile, "%d", &_count);
	fileData.data = new unsigned[_count];

	for (int i = 0; i < _count; i++) {
		fscanf_s(pFile, "%d", &(fileData.data[i]));
	}
	fileData.count = _count;

	return fileData;
}

void writeToFile(FileData fileData, const char fileName[]) {
	FILE *pFile;
	fopen_s(&pFile, fileName, "wt"); // read mode
	fprintf_s(pFile, "%d\n", fileData.count);

	for (int i = 0; i < fileData.count; i++) {
		fprintf_s(pFile, "%d\n", fileData.data[i]);
	}
}

void A(FileData fileData) {
	FileData newFileData;
	newFileData.count = 0;
	int R = 2;
	unsigned* data = new unsigned[fileData.count];

	for (int i = 0; i < fileData.count; i++) {
		int ones = onesBin(fileData.data[i]);
		if (ones == R) {
			data[newFileData.count] = fileData.data[i];
			newFileData.count++;
		}
	}
	newFileData.data = data;
	writeToFile(newFileData, "A.txt");
};

void B(FileData fileData) {
	FileData newFileData;
	newFileData.count = 0;
	int T = 2;
	unsigned* data = new unsigned[fileData.count];

	for (int i = 0; i < fileData.count; i++) {
		int zeros = zerosBin(fileData.data[i]);
		if (zeros >= T) {
			data[newFileData.count] = fileData.data[i];
			newFileData.count++;
		}
	}
	newFileData.data = data;
	writeToFile(newFileData, "B.txt");
};

void C(FileData fileData) {
	FileData newFileData;
	newFileData.count = 0;
	int R = 2;
	unsigned* data = new unsigned[fileData.count];

	for (int i = 0; i < fileData.count; i++) {
		if (lastFirstBit(fileData.data[i])) {
			data[newFileData.count] = fileData.data[i];
			newFileData.count++;
		}
	}
	newFileData.data = data;
	writeToFile(newFileData, "C.txt");
};

typedef void(*Function) (FileData);




int main()
{

	Function functions[] = {
		A,
		B,
		C
	};


	FileData fileData;
	fileData = readFromFile("data.txt");

	A(fileData);
	B(fileData);
	C(fileData);
}
