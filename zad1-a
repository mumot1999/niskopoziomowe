// ConsoleApplication3.cpp : Ten plik zawiera funkcję „main”. W nim rozpoczyna się i kończy wykonywanie programu.
//

#include "pch.h"
#include <iostream>

struct FileData {
	int count;
	unsigned *data;
};

int zerosBin(unsigned n) {
	int num_zeroes = 0;
	int flagFoundOne = 0;
	for (int i = sizeof(unsigned)*8; i; i--)
	{
		int mask = (1 << i-1);
		int bit = n & mask;
		if (bit)
			flagFoundOne = 1;
		if (!bit && flagFoundOne)
			num_zeroes++;
	}
	return num_zeroes;
}

int onesBin(unsigned n) {
	int ones = 0;
	while (n != 0) {
		ones += (n & 1);
		n >>= 1;
	}
	return ones;
}

bool lastFirstBit(unsigned n) {
	return (n & (1 << (sizeof(unsigned) * 8 - 1)) && (n & 1) );
}



FileData readFromFile() {
	char fileName[32];

	printf_s("Podaj nazwe pliku do wczytania: ");
	scanf_s("%s", fileName, 31);

	FileData fileData;
	FILE *pFile;
	fopen_s(&pFile, fileName, "r"); // read mode
	int _count;
	fscanf_s(pFile, "%d", &_count);
	fileData.data = new unsigned[_count];

	for (int i = 0; i < _count; i++) {
		fscanf_s(pFile, "%d", &(fileData.data[i]));
	}
	fileData.count = _count;

	return fileData;
}

void writeToFile(FileData fileData) {
	char fileName[32];

	printf_s("Podaj nazwe pliku: ");
	scanf_s("%s", fileName, 31);

	FILE *pFile;
	fopen_s(&pFile, fileName, "wt"); // read mode
	fprintf_s(pFile, "%d\n", fileData.count);

	for (int i = 0; i < fileData.count; i++) {
		fprintf_s(pFile, "%u\n", fileData.data[i]);
	}
}

void A(FileData fileData) {
	FileData newFileData;
	newFileData.count = 0;
	int R;
	printf_s("Podaj liczbe R: ");
	scanf_s("%d", &R);
	unsigned* data = new unsigned[fileData.count];

	for (int i = 0; i < fileData.count; i++) {
		int ones = onesBin(fileData.data[i]);
		if (ones == R) {
			data[newFileData.count] = fileData.data[i];
			newFileData.count++;
		}
	}
	newFileData.data = data;
	writeToFile(newFileData);
};

void B(FileData fileData) {
	FileData newFileData;
	newFileData.count = 0;
	int T;
	printf_s("Podaj liczbe T: ");
	scanf_s("%d", &T);
	unsigned* data = new unsigned[fileData.count];

	for (int i = 0; i < fileData.count; i++) {
		int zeros = zerosBin(fileData.data[i]);
		if (zeros >= T) {
			data[newFileData.count] = fileData.data[i];
			newFileData.count++;
		}
	}
	newFileData.data = data;
	writeToFile(newFileData);
};

void C(FileData fileData) {
	FileData newFileData;
	newFileData.count = 0;
	int R = 2;
	unsigned* data = new unsigned[fileData.count];


	for (int i = 0; i < fileData.count; i++) {
		if (lastFirstBit(fileData.data[i])) {
			data[newFileData.count] = fileData.data[i];
			newFileData.count++;
		}
	}
	newFileData.data = data;
	writeToFile(newFileData);
};

typedef void(*Function) (FileData);

int main()
{

	Function functions[] = {
		A,
		B,
		C
	};

	FileData fileData;
	fileData = readFromFile();
	int koniec = 0;
	int wybor = 0;
	while (!koniec)
	{
		printf("wybierz opcje:\n1 \n2 \n3 \n0-koniec\n");
		scanf_s("%d", &wybor);

		if (0 < wybor && wybor < 4)
			functions[wybor - 1](fileData);
		if (wybor == 0) koniec = true;
		//else printf_s("Blad"); 
	}

}
